{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/User.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","container","profileContainer","foto","src","alt","width","text","statsList","label","quantity","followers","views","likes","Statistics","statContainer","title","statistics","map","style","option","percentage","id","FriendList","friends","friend","friendItem","isOnline","onLine","offLine","TransactionHistory","transaction","trans","type","amount","currency","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56a8dc38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2I80C\",\"foto\":\"Profile_foto__3r44R\",\"profileContainer\":\"Profile_profileContainer__TTh5S\",\"text\":\"Profile_text__2PbKm\",\"stats\":\"Profile_stats__V0-rz\",\"statsList\":\"Profile_statsList__2HT7E\",\"label\":\"Profile_label__2FIC-\",\"quantity\":\"Profile_quantity__DP6Pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__FkWuQ\",\"statContainer\":\"Statistics_statContainer__FOoet\",\"title\":\"Statistics_title__3HeDK\",\"statsList\":\"Statistics_statsList__2s1Sa\",\"label\":\"Statistics_label__1x38s\",\"percentage\":\"Statistics_percentage__1Hwpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onLine\":\"FriendList_onLine__KQ_9w\",\"offLine\":\"FriendList_offLine__3z99y\",\"container\":\"FriendList_container__3MlDQ\",\"friendItem\":\"FriendList_friendItem__2-_jo\",\"avatar\":\"FriendList_avatar__3WMd8\",\"profileContainer\":\"FriendList_profileContainer__1ezOu\",\"text\":\"FriendList_text__reAyA\",\"stats\":\"FriendList_stats__3PhLN\",\"statsList\":\"FriendList_statsList__3X-Tj\",\"label\":\"FriendList_label__XFQXW\",\"quantity\":\"FriendList_quantity__3prGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransactionHistory_container__31htg\"};","import styles from './Profile.module.css'\r\n\r\nconst Profile = ({avatar, name, tag, location, stats }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n           \r\n            <div className={styles.profileContainer}>\r\n                 <img className={styles.foto} src={avatar}\r\n            alt=\"Аватар пользователя\" width=\"150\"\r\n            />\r\n                <h2>{name}</h2>\r\n       <p className={styles.text}>@{tag}</p>\r\n        <p className={styles.text}>{location}</p>\r\n            <div className={styles.stats}>\r\n        <ul className={styles.statsList}>\r\n            <li>\r\n            <span className={styles.label}>Followers</span>\r\n            <span className={styles.quantity}>{stats.followers}</span>\r\n            </li>\r\n            <li>\r\n            <span className={styles.label}>Views</span>\r\n            <span className={styles.quantity}>{stats.views}</span>\r\n            </li>\r\n            <li>\r\n            <span className={styles.label}>Likes</span>\r\n            <span className={styles.quantity}>{stats.likes}</span>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n\r\n    \r\n    // Profile.defaultProps = {\r\n    // avatar: defaultPhoto,\r\n    // };\r\n    \r\n    // Profile.propTypes = {\r\n    // avatar: PropTypes.string,\r\n    // name: PropTypes.string.isRequired,\r\n    // tag: PropTypes.string.isRequired,\r\n    // location: PropTypes.string.isRequired,\r\n    // stats: PropTypes.shape({\r\n    // followers: PropTypes.number.isRequired,\r\n    // views: PropTypes.number.isRequired,\r\n    // likes: PropTypes.number.isRequired,\r\n    // })\r\n    // };\r\n\r\n    export default Profile;\r\n    ","import statistics from './statistical-data.json'\r\nimport styles from './Statistics.module.css'\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.statContainer}>\r\n      <h2 className={styles.title}>Upload stats</h2>\r\n      <ul className={styles.statsList}>{statistics.map((stats) => (\r\n        <li key={statistics.id} style={styles.option}>\r\n          <span className={styles.label}>{stats.label}</span>\r\n          <span className={styles.percentage}>{stats.percentage}%</span>\r\n        </li>\r\n      ))\r\n  }\r\n  </ul>\r\n  </div>\r\n  </section>\r\n      )\r\n  }\r\n\r\n  export default Statistics;\r\n   ","import friends from './friends.json'\r\nimport styles from './FriendList.module.css'\r\n\r\nconst FriendList = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n        <ul>{friends.map((friend) => (\r\n            <li className={styles.friendItem} key={friend.id} >\r\n            <span className={friend.isOnline?styles.onLine : styles.offLine}>{friend.isOnline}</span>\r\n            <img className={styles.avatar} src={friend.avatar} alt=\"Аватар пользователя\" width=\"50\"/>\r\n            <h2>{friend.name}</h2>\r\n          </li>\r\n        ))\r\n    }\r\n    </ul>\r\n    </div>\r\n        )\r\n    }\r\n  \r\n    export default FriendList;\r\n     \r\n// В зависимости от пропа isOnline, должен меняться цвет\r\n//  фона span.status. Это можно сделать через разный\r\n//   CSS-класс или Styled Components.\r\n\r\n\r\n","import transaction from './transactions.json'\r\nimport styles from './TransactionHistory.module.css'\r\n\r\nconst TransactionHistory = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n    <table>\r\n        <thead>\r\n        <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n        </tr>\r\n        </thead>\r\n      <tbody>{transaction.map((trans) => (\r\n    <tr>\r\n      <td>{trans.type}</td>\r\n      <td>{trans.amount}</td>\r\n      <td>{trans.currency}</td>\r\n    </tr>\r\n        ))\r\n    }\r\n    </tbody>\r\n    </table>\r\n    </div>\r\n    )\r\n}\r\n  \r\n    export default TransactionHistory;\r\n","import React from 'react';\r\nimport user from './components/Profile/user.json'\r\nimport Profile from './components/Profile/User'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport statistics from './components/Statistics/statistical-data.json'\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport friends from './components/FriendList/friends.json'\r\nimport transaction from './components/TransactionHistory/transactions.json'\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <div>\r\n        <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n        />\r\n        </div>\r\n\r\n        <div>\r\n        <Statistics\r\n        title={statistics.title}\r\n        stats={statistics.label}\r\n        />\r\n        </div>\r\n\r\n        <div>\r\n        <FriendList\r\n        name={friends.name}\r\n        isOnline={friends.isOnline}\r\n        avatar={friends.avatar}\r\n        />\r\n        </div>\r\n\r\n         <div>\r\n        <TransactionHistory\r\n        type={transaction.type}\r\n        amount={transaction.amount}\r\n        currency={transaction.currency}\r\n        />\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}